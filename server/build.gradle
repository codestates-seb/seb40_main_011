plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
}

jar {
    enabled = false // 빌드시 Plain 파일의 생성을 방지함.
}

group = 'seb.project'
version = '0.0.6-SNAPSHOT' // 버전 관리는 큰 패치의 경우는 0.1.0 작은 리비전의 경우는 0.0.1 정식 빌드의 경우 1.0.0 으로 관리한다.
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies { // 시큐리티의 경우는 시큐리티 전담자가 기본 설정을 완료하기 전까지는 커밋시 주석처리를 합시다.
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    //implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.apache.tika:tika-core:2.6.0'
    implementation 'org.apache.tika:tika-parsers:2.6.0'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

//@SpringBootApplication이 선언된 MainClass 설정
bootJar {
    mainClass = 'seb.project.Codetech.CodetechApplication'
}

//profiles 설정
bootRun {
    String activeProfile = System.properties['spring.profiles.prod']
    systemProperty "spring.profiles.prod", activeProfile
}
